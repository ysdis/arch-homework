version: "3.7"
services:
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    restart: unless-stopped
    container_name: ${PROJECT_NAME}.redis
    ports:
      - ${REDIS_LOCAL_PORT}:6379
    volumes:
      - ./database/redis:/data
    networks:
      - arch_network
  php:
    build:
      args:
        uname: ${PHP_UNAME}
        timezone: ${PHP_TIMEZONE}
        uid: ${PHP_UID}
        gid: ${PHP_GID}
      context: ./services/php
    container_name: ${PROJECT_NAME}.php
    image: ${PROJECT_NAME}_php
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./services/php/php.ini:/usr/local/etc/php/php.ini
      - ../src:/var/www/
    environment:
      COMPOSER_MEMORY_LIMIT: 512M
      XDEBUG_CONFIG: client_host=${XDEBUG_REMOTE_HOST} client_port=${XDEBUG_STORM_PORT} remote_enable=1
      PHP_IDE_CONFIG: serverName=${XDEBUG_STORM_SERVER_NAME}
    networks:
      - arch_network
    depends_on:
      - postgres
  postgres:
    image: postgres:11-alpine
    restart: unless-stopped
    container_name: ${PROJECT_NAME}.postgres
    volumes:
      - ./database/postgres:/var/lib/postgresql/data
      - ./services/database:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DATABASES: ${POSTGRES_DATABASES}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${DB_LOCAL_PORT}:5432
    networks:
      - arch_network
  nginx:
    image: nginx:1.17-alpine
    restart: unless-stopped
    container_name: ${PROJECT_NAME}.nginx
    ports:
      - ${NGINX_LOCAL_PORT}:80
    volumes:
      - ../src:/var/www/
      - ./services/nginx:/etc/nginx/conf.d
    networks:
      - arch_network
    depends_on:
      - php
networks:
  arch_network:
    driver: bridge
    name: ${PROJECT_NAME}_arch_network
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET_IP}/${SUBNET_MASK}
